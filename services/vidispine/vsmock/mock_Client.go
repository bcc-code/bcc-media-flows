// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/bcc-code/bcc-media-flows/services/vidispine (interfaces: Client)
//
// Generated by this command:
//
//	mockgen -destination vsmock/mock_Client.go -package vsmock . Client
//

// Package vsmock is a generated GoMock package.
package vsmock

import (
	context "context"
	reflect "reflect"

	vsapi "github.com/bcc-code/bcc-media-flows/services/vidispine/vsapi"
	gomock "go.uber.org/mock/gomock"
)

// MockClient is a mock of Client interface.
type MockClient struct {
	ctrl     *gomock.Controller
	recorder *MockClientMockRecorder
}

// MockClientMockRecorder is the mock recorder for MockClient.
type MockClientMockRecorder struct {
	mock *MockClient
}

// NewMockClient creates a new mock instance.
func NewMockClient(ctrl *gomock.Controller) *MockClient {
	mock := &MockClient{ctrl: ctrl}
	mock.recorder = &MockClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockClient) EXPECT() *MockClientMockRecorder {
	return m.recorder
}

// AddFileToPlaceholder mocks base method.
func (m *MockClient) AddFileToPlaceholder(arg0, arg1, arg2 string, arg3 vsapi.FileState) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddFileToPlaceholder", arg0, arg1, arg2, arg3)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// AddFileToPlaceholder indicates an expected call of AddFileToPlaceholder.
func (mr *MockClientMockRecorder) AddFileToPlaceholder(arg0, arg1, arg2, arg3 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddFileToPlaceholder", reflect.TypeOf((*MockClient)(nil).AddFileToPlaceholder), arg0, arg1, arg2, arg3)
}

// AddShapeToItem mocks base method.
func (m *MockClient) AddShapeToItem(arg0, arg1, arg2 string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddShapeToItem", arg0, arg1, arg2)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// AddShapeToItem indicates an expected call of AddShapeToItem.
func (mr *MockClientMockRecorder) AddShapeToItem(arg0, arg1, arg2 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddShapeToItem", reflect.TypeOf((*MockClient)(nil).AddShapeToItem), arg0, arg1, arg2)
}

// AddSidecarToItem mocks base method.
func (m *MockClient) AddSidecarToItem(arg0, arg1, arg2 string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddSidecarToItem", arg0, arg1, arg2)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// AddSidecarToItem indicates an expected call of AddSidecarToItem.
func (mr *MockClientMockRecorder) AddSidecarToItem(arg0, arg1, arg2 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddSidecarToItem", reflect.TypeOf((*MockClient)(nil).AddSidecarToItem), arg0, arg1, arg2)
}

// AddToItemMetadataField mocks base method.
func (m *MockClient) AddToItemMetadataField(arg0 vsapi.ItemMetadataFieldParams) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddToItemMetadataField", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// AddToItemMetadataField indicates an expected call of AddToItemMetadataField.
func (mr *MockClientMockRecorder) AddToItemMetadataField(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddToItemMetadataField", reflect.TypeOf((*MockClient)(nil).AddToItemMetadataField), arg0)
}

// CreatePlaceholder mocks base method.
func (m *MockClient) CreatePlaceholder(arg0 vsapi.PlaceholderType, arg1 string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreatePlaceholder", arg0, arg1)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreatePlaceholder indicates an expected call of CreatePlaceholder.
func (mr *MockClientMockRecorder) CreatePlaceholder(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreatePlaceholder", reflect.TypeOf((*MockClient)(nil).CreatePlaceholder), arg0, arg1)
}

// CreateThumbnails mocks base method.
func (m *MockClient) CreateThumbnails(arg0 string, arg1, arg2 int) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateThumbnails", arg0, arg1, arg2)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateThumbnails indicates an expected call of CreateThumbnails.
func (mr *MockClientMockRecorder) CreateThumbnails(arg0, arg1, arg2 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateThumbnails", reflect.TypeOf((*MockClient)(nil).CreateThumbnails), arg0, arg1, arg2)
}

// DeleteItems mocks base method.
func (m *MockClient) DeleteItems(arg0 context.Context, arg1 []string, arg2 bool) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteItems", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteItems indicates an expected call of DeleteItems.
func (mr *MockClientMockRecorder) DeleteItems(arg0, arg1, arg2 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteItems", reflect.TypeOf((*MockClient)(nil).DeleteItems), arg0, arg1, arg2)
}

// DeleteShape mocks base method.
func (m *MockClient) DeleteShape(arg0, arg1 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteShape", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteShape indicates an expected call of DeleteShape.
func (mr *MockClientMockRecorder) DeleteShape(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteShape", reflect.TypeOf((*MockClient)(nil).DeleteShape), arg0, arg1)
}

// GetChapterMeta mocks base method.
func (m *MockClient) GetChapterMeta(arg0 string, arg1, arg2 float64) (map[string]*vsapi.MetadataResult, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetChapterMeta", arg0, arg1, arg2)
	ret0, _ := ret[0].(map[string]*vsapi.MetadataResult)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetChapterMeta indicates an expected call of GetChapterMeta.
func (mr *MockClientMockRecorder) GetChapterMeta(arg0, arg1, arg2 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetChapterMeta", reflect.TypeOf((*MockClient)(nil).GetChapterMeta), arg0, arg1, arg2)
}

// GetJob mocks base method.
func (m *MockClient) GetJob(arg0 string) (*vsapi.JobDocument, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetJob", arg0)
	ret0, _ := ret[0].(*vsapi.JobDocument)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetJob indicates an expected call of GetJob.
func (mr *MockClientMockRecorder) GetJob(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetJob", reflect.TypeOf((*MockClient)(nil).GetJob), arg0)
}

// GetMetadata mocks base method.
func (m *MockClient) GetMetadata(arg0 string) (*vsapi.MetadataResult, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetMetadata", arg0)
	ret0, _ := ret[0].(*vsapi.MetadataResult)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetMetadata indicates an expected call of GetMetadata.
func (mr *MockClientMockRecorder) GetMetadata(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetMetadata", reflect.TypeOf((*MockClient)(nil).GetMetadata), arg0)
}

// GetRelations mocks base method.
func (m *MockClient) GetRelations(arg0 string) ([]vsapi.Relation, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetRelations", arg0)
	ret0, _ := ret[0].([]vsapi.Relation)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetRelations indicates an expected call of GetRelations.
func (mr *MockClientMockRecorder) GetRelations(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetRelations", reflect.TypeOf((*MockClient)(nil).GetRelations), arg0)
}

// GetResolutions mocks base method.
func (m *MockClient) GetResolutions(arg0 string) ([]vsapi.Resolution, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetResolutions", arg0)
	ret0, _ := ret[0].([]vsapi.Resolution)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetResolutions indicates an expected call of GetResolutions.
func (mr *MockClientMockRecorder) GetResolutions(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetResolutions", reflect.TypeOf((*MockClient)(nil).GetResolutions), arg0)
}

// GetSequence mocks base method.
func (m *MockClient) GetSequence(arg0 string) (*vsapi.SequenceDocument, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetSequence", arg0)
	ret0, _ := ret[0].(*vsapi.SequenceDocument)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetSequence indicates an expected call of GetSequence.
func (mr *MockClientMockRecorder) GetSequence(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSequence", reflect.TypeOf((*MockClient)(nil).GetSequence), arg0)
}

// GetShapes mocks base method.
func (m *MockClient) GetShapes(arg0 string) (*vsapi.ShapeResult, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetShapes", arg0)
	ret0, _ := ret[0].(*vsapi.ShapeResult)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetShapes indicates an expected call of GetShapes.
func (mr *MockClientMockRecorder) GetShapes(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetShapes", reflect.TypeOf((*MockClient)(nil).GetShapes), arg0)
}

// GetTrash mocks base method.
func (m *MockClient) GetTrash() ([]string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTrash")
	ret0, _ := ret[0].([]string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetTrash indicates an expected call of GetTrash.
func (mr *MockClientMockRecorder) GetTrash() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTrash", reflect.TypeOf((*MockClient)(nil).GetTrash))
}

// RegisterFile mocks base method.
func (m *MockClient) RegisterFile(arg0 string, arg1 vsapi.FileState) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RegisterFile", arg0, arg1)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// RegisterFile indicates an expected call of RegisterFile.
func (mr *MockClientMockRecorder) RegisterFile(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RegisterFile", reflect.TypeOf((*MockClient)(nil).RegisterFile), arg0, arg1)
}

// SetItemMetadataField mocks base method.
func (m *MockClient) SetItemMetadataField(arg0 vsapi.ItemMetadataFieldParams) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SetItemMetadataField", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// SetItemMetadataField indicates an expected call of SetItemMetadataField.
func (mr *MockClientMockRecorder) SetItemMetadataField(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetItemMetadataField", reflect.TypeOf((*MockClient)(nil).SetItemMetadataField), arg0)
}

// UpdateFileState mocks base method.
func (m *MockClient) UpdateFileState(arg0 string, arg1 vsapi.FileState) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateFileState", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateFileState indicates an expected call of UpdateFileState.
func (mr *MockClientMockRecorder) UpdateFileState(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateFileState", reflect.TypeOf((*MockClient)(nil).UpdateFileState), arg0, arg1)
}
